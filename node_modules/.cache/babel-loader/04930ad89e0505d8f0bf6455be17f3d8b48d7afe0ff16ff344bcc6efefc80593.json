{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport axios from \"axios\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport toast from \"react-hot-toast\";\nimport constants from \"../utils/constants\";\naxios.defaults.baseURL = constants.API_URL;\n// If you are using different URLs, consider removing this line and adding a baseURL in the Axios Config parameter.\n\nconst useAxios = (axiosParams, isDefaultApiCall = false) => {\n  _s();\n  const [response, setResponse] = useState();\n  const [error, setError] = useState();\n  const notify = err => toast.error(`Error: ${(err === null || err === void 0 ? void 0 : err.message) || \"Something went wrong!!\"}`);\n  const [loading, setLoading] = useState((axiosParams.method === \"GET\" || axiosParams.method === \"get\") && isDefaultApiCall);\n  const fetchData = async params => {\n    try {\n      const result = await axios.request(params);\n      setResponse(result);\n    } catch (err) {\n      notify(err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const sendData = () => {\n    setLoading(true);\n    fetchData(axiosParams);\n  };\n  useEffect(() => {\n    if ((axiosParams.method === \"GET\" || axiosParams.method === \"get\") && isDefaultApiCall) {\n      fetchData(axiosParams);\n    }\n  }, []);\n  return {\n    response,\n    error,\n    loading,\n    sendData\n  };\n};\n_s(useAxios, \"GSYv7Rad2ExejUTnXkTAy32Qnco=\");\nexport default useAxios;","map":{"version":3,"names":["useState","useEffect","axios","toast","constants","defaults","baseURL","API_URL","useAxios","axiosParams","isDefaultApiCall","_s","response","setResponse","error","setError","notify","err","message","loading","setLoading","method","fetchData","params","result","request","sendData"],"sources":["/Users/admin/Desktop/react-assignment-task/src/hooks/useAxios.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport toast from \"react-hot-toast\";\nimport constants from \"../utils/constants\";\n\naxios.defaults.baseURL = constants.API_URL;\n// If you are using different URLs, consider removing this line and adding a baseURL in the Axios Config parameter.\n\nconst useAxios = (\n  axiosParams: AxiosRequestConfig,\n  isDefaultApiCall: boolean = false\n) => {\n  const [response, setResponse] = useState<AxiosResponse>();\n  const [error, setError] = useState<AxiosError>();\n  const notify = (err: AxiosError) =>\n    toast.error(`Error: ${err?.message || \"Something went wrong!!\"}`);\n\n  const [loading, setLoading] = useState(\n    (axiosParams.method === \"GET\" || axiosParams.method === \"get\") &&\n      isDefaultApiCall\n  );\n\n  const fetchData = async (params: AxiosRequestConfig) => {\n    try {\n      const result = await axios.request(params);\n      setResponse(result);\n    } catch (err: any) {\n      notify(err);\n      setError(err as AxiosError);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const sendData = () => {\n    setLoading(true);\n    fetchData(axiosParams);\n  };\n\n  useEffect(() => {\n    if (\n      (axiosParams.method === \"GET\" || axiosParams.method === \"get\") &&\n      isDefaultApiCall\n    ) {\n      fetchData(axiosParams);\n    }\n  }, []);\n\n  return { response, error, loading, sendData };\n};\n\nexport default useAxios;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,OAAOC,KAAK,MAAyD,OAAO;AAC5E;AACA,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,SAAS,MAAM,oBAAoB;AAE1CF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAGF,SAAS,CAACG,OAAO;AAC1C;;AAEA,MAAMC,QAAQ,GAAGA,CACfC,WAA+B,EAC/BC,gBAAyB,GAAG,KAAK,KAC9B;EAAAC,EAAA;EACH,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAgB,CAAC;EACzD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAa,CAAC;EAChD,MAAMgB,MAAM,GAAIC,GAAe,IAC7Bd,KAAK,CAACW,KAAK,CAAE,UAAS,CAAAG,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,OAAO,KAAI,wBAAyB,EAAC,CAAC;EAEnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CACpC,CAACS,WAAW,CAACY,MAAM,KAAK,KAAK,IAAIZ,WAAW,CAACY,MAAM,KAAK,KAAK,KAC3DX,gBACJ,CAAC;EAED,MAAMY,SAAS,GAAG,MAAOC,MAA0B,IAAK;IACtD,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACuB,OAAO,CAACF,MAAM,CAAC;MAC1CV,WAAW,CAACW,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOP,GAAQ,EAAE;MACjBD,MAAM,CAACC,GAAG,CAAC;MACXF,QAAQ,CAACE,GAAiB,CAAC;IAC7B,CAAC,SAAS;MACRG,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrBN,UAAU,CAAC,IAAI,CAAC;IAChBE,SAAS,CAACb,WAAW,CAAC;EACxB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,IACE,CAACQ,WAAW,CAACY,MAAM,KAAK,KAAK,IAAIZ,WAAW,CAACY,MAAM,KAAK,KAAK,KAC7DX,gBAAgB,EAChB;MACAY,SAAS,CAACb,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,QAAQ;IAAEE,KAAK;IAAEK,OAAO;IAAEO;EAAS,CAAC;AAC/C,CAAC;AAACf,EAAA,CAzCIH,QAAQ;AA2Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}