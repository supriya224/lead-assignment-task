{"ast":null,"code":"/* eslint-disable import/no-extraneous-dependencies */ // eslint-disable-next-line import/no-extraneous-dependencies\nimport{configureStore}from\"@reduxjs/toolkit\";import{useDispatch,useSelector}from\"react-redux\";import PostalCodeReducer from\"./slice/postalCodeSlice\";export var store=configureStore({reducer:{postalCode:PostalCodeReducer}});// Infer the `RootState` and `AppDispatch` types from the store itself\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport var useAppDispatch=useDispatch;export var useAppSelector=useSelector;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","PostalCodeReducer","store","reducer","postalCode","useAppDispatch","useAppSelector"],"sources":["/Users/admin/Desktop/react-assignment-task/src/redux/store.ts"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport PostalCodeReducer from \"./slice/postalCodeSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    postalCode: PostalCodeReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"mappings":"AAAA,uDACA;AACA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAC5E,MAAO,CAAAC,iBAAiB,KAAM,yBAAyB,CAEvD,MAAO,IAAM,CAAAC,KAAK,CAAGJ,cAAc,CAAC,CAClCK,OAAO,CAAE,CACPC,UAAU,CAAEH,iBACd,CACF,CAAC,CAAC,CAEF;AAEA;AAGA;AACA,MAAO,IAAM,CAAAI,cAAiC,CAAGN,WAAW,CAC5D,MAAO,IAAM,CAAAO,cAA+C,CAAGN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}