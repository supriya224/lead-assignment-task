{"ast":null,"code":"/* eslint-disable import/no-extraneous-dependencies */import{createSlice}from\"@reduxjs/toolkit\";import{countInitialState}from\"../intitialState/count.intitialState\";export var counterSlice=createSlice({name:\"postalCode\",initialState:countInitialState,reducers:{saveInputValue:function saveInputValue(state,action){state.postalCode=action.payload;}}});// Action creators are generated for each case reducer function\nvar saveInputValue=counterSlice.actions.saveInputValue;export{saveInputValue};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","countInitialState","counterSlice","name","initialState","reducers","saveInputValue","state","action","postalCode","payload","actions","reducer"],"sources":["/Users/admin/Desktop/react-assignment-task/src/redux/slice/postalCodeSlice.ts"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { countInitialState } from \"../intitialState/count.intitialState\";\n\nexport const counterSlice = createSlice({\n  name: \"postalCode\",\n  initialState: countInitialState,\n  reducers: {\n    saveInputValue: (state, action: PayloadAction<number>) => {\n      state.postalCode = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { saveInputValue } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n"],"mappings":"AAAA,sDACA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,OAASC,iBAAiB,KAAQ,sCAAsC,CAExE,MAAO,IAAM,CAAAC,YAAY,CAAGF,WAAW,CAAC,CACtCG,IAAI,CAAE,YAAY,CAClBC,YAAY,CAAEH,iBAAiB,CAC/BI,QAAQ,CAAE,CACRC,cAAc,CAAE,SAAAA,eAACC,KAAK,CAAEC,MAA6B,CAAK,CACxDD,KAAK,CAACE,UAAU,CAAGD,MAAM,CAACE,OAAO,CACnC,CACF,CACF,CAAC,CAAC,CAEF;AACO,GAAQ,CAAAJ,cAAc,CAAKJ,YAAY,CAACS,OAAO,CAAvCL,cAAc,CAA0B,OAAAA,cAAA,EAEvD,cAAe,CAAAJ,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}