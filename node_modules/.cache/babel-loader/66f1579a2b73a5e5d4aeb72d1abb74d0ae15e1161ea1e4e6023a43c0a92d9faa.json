{"ast":null,"code":"/* eslint-disable import/no-extraneous-dependencies */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { countInitialState } from \"../intitialState/count.intitialState\";\nexport const counterSlice = createSlice({\n  name: \"postalCode\",\n  initialState: countInitialState,\n  reducers: {\n    saveInputValue: (state, action) => {\n      state.postalCode = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  saveInputValue\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","countInitialState","counterSlice","name","initialState","reducers","saveInputValue","state","action","postalCode","payload","actions","reducer"],"sources":["/Users/admin/Desktop/react-assignment-task/src/redux/slice/postalCodeSlice.ts"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\nimport { countInitialState } from \"../intitialState/count.intitialState\";\n\nexport const counterSlice = createSlice({\n  name: \"postalCode\",\n  initialState: countInitialState,\n  reducers: {\n    saveInputValue: (state, action: PayloadAction<number>) => {\n      state.postalCode = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { saveInputValue } = counterSlice.actions;\n\nexport default counterSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,iBAAiB,QAAQ,sCAAsC;AAExE,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAEH,iBAAiB;EAC/BI,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACxDD,KAAK,CAACE,UAAU,GAAGD,MAAM,CAACE,OAAO;IACnC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEJ;AAAe,CAAC,GAAGJ,YAAY,CAACS,OAAO;AAEtD,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}